// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: emo_gRPC.proto

#include "emo_gRPC.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_emo_5fgRPC_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultList_Result_emo_5fgRPC_2eproto;
namespace emo_gRPC {
class NullMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NullMsg> _instance;
} _NullMsg_default_instance_;
class EmoConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmoConfig> _instance;
} _EmoConfig_default_instance_;
class ResultList_ResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultList_Result> _instance;
} _ResultList_Result_default_instance_;
class ResultListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultList> _instance;
} _ResultList_default_instance_;
class LabelSizeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LabelSize> _instance;
} _LabelSize_default_instance_;
class EmoImgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmoImg> _instance;
} _EmoImg_default_instance_;
}  // namespace emo_gRPC
static void InitDefaultsscc_info_EmoConfig_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_EmoConfig_default_instance_;
    new (ptr) ::emo_gRPC::EmoConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::EmoConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmoConfig_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EmoConfig_emo_5fgRPC_2eproto}, {}};

static void InitDefaultsscc_info_EmoImg_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_EmoImg_default_instance_;
    new (ptr) ::emo_gRPC::EmoImg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::EmoImg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmoImg_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EmoImg_emo_5fgRPC_2eproto}, {}};

static void InitDefaultsscc_info_LabelSize_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_LabelSize_default_instance_;
    new (ptr) ::emo_gRPC::LabelSize();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::LabelSize::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LabelSize_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LabelSize_emo_5fgRPC_2eproto}, {}};

static void InitDefaultsscc_info_NullMsg_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_NullMsg_default_instance_;
    new (ptr) ::emo_gRPC::NullMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::NullMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NullMsg_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NullMsg_emo_5fgRPC_2eproto}, {}};

static void InitDefaultsscc_info_ResultList_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_ResultList_default_instance_;
    new (ptr) ::emo_gRPC::ResultList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::ResultList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultList_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ResultList_emo_5fgRPC_2eproto}, {
      &scc_info_ResultList_Result_emo_5fgRPC_2eproto.base,}};

static void InitDefaultsscc_info_ResultList_Result_emo_5fgRPC_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::emo_gRPC::_ResultList_Result_default_instance_;
    new (ptr) ::emo_gRPC::ResultList_Result();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::emo_gRPC::ResultList_Result::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultList_Result_emo_5fgRPC_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ResultList_Result_emo_5fgRPC_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_emo_5fgRPC_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_emo_5fgRPC_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_emo_5fgRPC_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_emo_5fgRPC_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::NullMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::EmoConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, x0_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, y0_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, x1_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, y1_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList_Result, label_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::ResultList, re_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::LabelSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::LabelSize, w_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::LabelSize, h_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::EmoImg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::EmoImg, w_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::EmoImg, h_),
  PROTOBUF_FIELD_OFFSET(::emo_gRPC::EmoImg, imgbuffer_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::emo_gRPC::NullMsg)},
  { 5, -1, sizeof(::emo_gRPC::EmoConfig)},
  { 10, -1, sizeof(::emo_gRPC::ResultList_Result)},
  { 20, -1, sizeof(::emo_gRPC::ResultList)},
  { 26, -1, sizeof(::emo_gRPC::LabelSize)},
  { 33, -1, sizeof(::emo_gRPC::EmoImg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_NullMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_EmoConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_ResultList_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_ResultList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_LabelSize_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::emo_gRPC::_EmoImg_default_instance_),
};

const char descriptor_table_protodef_emo_5fgRPC_2eproto[] =
  "\n\016emo_gRPC.proto\022\010emo_gRPC\"\t\n\007NullMsg\"\013\n"
  "\tEmoConfig\"\205\001\n\nResultList\022.\n\tre_result\030\001"
  " \003(\0132\033.emo_gRPC.ResultList.Result\032G\n\006Res"
  "ult\022\n\n\002x0\030\001 \001(\002\022\n\n\002y0\030\002 \001(\002\022\n\n\002x1\030\003 \001(\002\022"
  "\n\n\002y1\030\004 \001(\002\022\r\n\005label\030\005 \001(\t\"!\n\tLabelSize\022"
  "\t\n\001w\030\001 \001(\005\022\t\n\001h\030\002 \001(\005\"1\n\006EmoImg\022\t\n\001w\030\001 \001"
  "(\005\022\t\n\001h\030\002 \001(\005\022\021\n\timgBuffer\030\003 \001(\0142\232\002\n\013Com"
  "municate\022/\n\005check\022\021.emo_gRPC.NullMsg\032\021.e"
  "mo_gRPC.NullMsg\"\000\0226\n\nsetEmoConf\022\023.emo_gR"
  "PC.EmoConfig\032\021.emo_gRPC.NullMsg\"\000\0221\n\007sto"
  "pEmo\022\021.emo_gRPC.NullMsg\032\021.emo_gRPC.NullM"
  "sg\"\000\0229\n\014getEmoResult\022\021.emo_gRPC.NullMsg\032"
  "\024.emo_gRPC.ResultList\"\000\0224\n\tgetEmoImg\022\023.e"
  "mo_gRPC.LabelSize\032\020.emo_gRPC.EmoImg\"\000b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_emo_5fgRPC_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_emo_5fgRPC_2eproto_sccs[6] = {
  &scc_info_EmoConfig_emo_5fgRPC_2eproto.base,
  &scc_info_EmoImg_emo_5fgRPC_2eproto.base,
  &scc_info_LabelSize_emo_5fgRPC_2eproto.base,
  &scc_info_NullMsg_emo_5fgRPC_2eproto.base,
  &scc_info_ResultList_emo_5fgRPC_2eproto.base,
  &scc_info_ResultList_Result_emo_5fgRPC_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_emo_5fgRPC_2eproto_once;
static bool descriptor_table_emo_5fgRPC_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_emo_5fgRPC_2eproto = {
  &descriptor_table_emo_5fgRPC_2eproto_initialized, descriptor_table_protodef_emo_5fgRPC_2eproto, "emo_gRPC.proto", 565,
  &descriptor_table_emo_5fgRPC_2eproto_once, descriptor_table_emo_5fgRPC_2eproto_sccs, descriptor_table_emo_5fgRPC_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_emo_5fgRPC_2eproto::offsets,
  file_level_metadata_emo_5fgRPC_2eproto, 6, file_level_enum_descriptors_emo_5fgRPC_2eproto, file_level_service_descriptors_emo_5fgRPC_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_emo_5fgRPC_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_emo_5fgRPC_2eproto), true);
namespace emo_gRPC {

// ===================================================================

void NullMsg::InitAsDefaultInstance() {
}
class NullMsg::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NullMsg::NullMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.NullMsg)
}
NullMsg::NullMsg(const NullMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.NullMsg)
}

void NullMsg::SharedCtor() {
}

NullMsg::~NullMsg() {
  // @@protoc_insertion_point(destructor:emo_gRPC.NullMsg)
  SharedDtor();
}

void NullMsg::SharedDtor() {
}

void NullMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NullMsg& NullMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NullMsg_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void NullMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.NullMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NullMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NullMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.NullMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.NullMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.NullMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NullMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.NullMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.NullMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* NullMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.NullMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.NullMsg)
  return target;
}

size_t NullMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.NullMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NullMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.NullMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NullMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NullMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.NullMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.NullMsg)
    MergeFrom(*source);
  }
}

void NullMsg::MergeFrom(const NullMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.NullMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NullMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.NullMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NullMsg::CopyFrom(const NullMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.NullMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullMsg::IsInitialized() const {
  return true;
}

void NullMsg::Swap(NullMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NullMsg::InternalSwap(NullMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NullMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmoConfig::InitAsDefaultInstance() {
}
class EmoConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmoConfig::EmoConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.EmoConfig)
}
EmoConfig::EmoConfig(const EmoConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.EmoConfig)
}

void EmoConfig::SharedCtor() {
}

EmoConfig::~EmoConfig() {
  // @@protoc_insertion_point(destructor:emo_gRPC.EmoConfig)
  SharedDtor();
}

void EmoConfig::SharedDtor() {
}

void EmoConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmoConfig& EmoConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmoConfig_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void EmoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.EmoConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmoConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmoConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.EmoConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.EmoConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.EmoConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmoConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.EmoConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.EmoConfig)
}

::PROTOBUF_NAMESPACE_ID::uint8* EmoConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.EmoConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.EmoConfig)
  return target;
}

size_t EmoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.EmoConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmoConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.EmoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const EmoConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmoConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.EmoConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.EmoConfig)
    MergeFrom(*source);
  }
}

void EmoConfig::MergeFrom(const EmoConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.EmoConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmoConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.EmoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmoConfig::CopyFrom(const EmoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.EmoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmoConfig::IsInitialized() const {
  return true;
}

void EmoConfig::Swap(EmoConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmoConfig::InternalSwap(EmoConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmoConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultList_Result::InitAsDefaultInstance() {
}
class ResultList_Result::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultList_Result::kX0FieldNumber;
const int ResultList_Result::kY0FieldNumber;
const int ResultList_Result::kX1FieldNumber;
const int ResultList_Result::kY1FieldNumber;
const int ResultList_Result::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultList_Result::ResultList_Result()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.ResultList.Result)
}
ResultList_Result::ResultList_Result(const ResultList_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&x0_, &from.x0_,
    static_cast<size_t>(reinterpret_cast<char*>(&y1_) -
    reinterpret_cast<char*>(&x0_)) + sizeof(y1_));
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.ResultList.Result)
}

void ResultList_Result::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultList_Result_emo_5fgRPC_2eproto.base);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&x0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y1_) -
      reinterpret_cast<char*>(&x0_)) + sizeof(y1_));
}

ResultList_Result::~ResultList_Result() {
  // @@protoc_insertion_point(destructor:emo_gRPC.ResultList.Result)
  SharedDtor();
}

void ResultList_Result::SharedDtor() {
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResultList_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultList_Result& ResultList_Result::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultList_Result_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void ResultList_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.ResultList.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&x0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y1_) -
      reinterpret_cast<char*>(&x0_)) + sizeof(y1_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResultList_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float x1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          x1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          y1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string label = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_label(), ptr, ctx, "emo_gRPC.ResultList.Result.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResultList_Result::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.ResultList.Result)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x0 = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (13 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y0 = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x1 = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (29 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y1 = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (37 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "emo_gRPC.ResultList.Result.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.ResultList.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.ResultList.Result)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResultList_Result::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.ResultList.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x0 = 1;
  if (!(this->x0() <= 0 && this->x0() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(1, this->x0(), output);
  }

  // float y0 = 2;
  if (!(this->y0() <= 0 && this->y0() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->y0(), output);
  }

  // float x1 = 3;
  if (!(this->x1() <= 0 && this->x1() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(3, this->x1(), output);
  }

  // float y1 = 4;
  if (!(this->y1() <= 0 && this->y1() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(4, this->y1(), output);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "emo_gRPC.ResultList.Result.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.ResultList.Result)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultList_Result::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.ResultList.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x0 = 1;
  if (!(this->x0() <= 0 && this->x0() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->x0(), target);
  }

  // float y0 = 2;
  if (!(this->y0() <= 0 && this->y0() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->y0(), target);
  }

  // float x1 = 3;
  if (!(this->x1() <= 0 && this->x1() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->x1(), target);
  }

  // float y1 = 4;
  if (!(this->y1() <= 0 && this->y1() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->y1(), target);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "emo_gRPC.ResultList.Result.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.ResultList.Result)
  return target;
}

size_t ResultList_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.ResultList.Result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string label = 5;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->label());
  }

  // float x0 = 1;
  if (!(this->x0() <= 0 && this->x0() >= 0)) {
    total_size += 1 + 4;
  }

  // float y0 = 2;
  if (!(this->y0() <= 0 && this->y0() >= 0)) {
    total_size += 1 + 4;
  }

  // float x1 = 3;
  if (!(this->x1() <= 0 && this->x1() >= 0)) {
    total_size += 1 + 4;
  }

  // float y1 = 4;
  if (!(this->y1() <= 0 && this->y1() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultList_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.ResultList.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultList_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultList_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.ResultList.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.ResultList.Result)
    MergeFrom(*source);
  }
}

void ResultList_Result::MergeFrom(const ResultList_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.ResultList.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (!(from.x0() <= 0 && from.x0() >= 0)) {
    set_x0(from.x0());
  }
  if (!(from.y0() <= 0 && from.y0() >= 0)) {
    set_y0(from.y0());
  }
  if (!(from.x1() <= 0 && from.x1() >= 0)) {
    set_x1(from.x1());
  }
  if (!(from.y1() <= 0 && from.y1() >= 0)) {
    set_y1(from.y1());
  }
}

void ResultList_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.ResultList.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultList_Result::CopyFrom(const ResultList_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.ResultList.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultList_Result::IsInitialized() const {
  return true;
}

void ResultList_Result::Swap(ResultList_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultList_Result::InternalSwap(ResultList_Result* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x0_, other->x0_);
  swap(y0_, other->y0_);
  swap(x1_, other->x1_);
  swap(y1_, other->y1_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultList_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultList::InitAsDefaultInstance() {
}
class ResultList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultList::kReResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultList::ResultList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.ResultList)
}
ResultList::ResultList(const ResultList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      re_result_(from.re_result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.ResultList)
}

void ResultList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultList_emo_5fgRPC_2eproto.base);
}

ResultList::~ResultList() {
  // @@protoc_insertion_point(destructor:emo_gRPC.ResultList)
  SharedDtor();
}

void ResultList::SharedDtor() {
}

void ResultList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultList& ResultList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultList_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void ResultList::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.ResultList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  re_result_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResultList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .emo_gRPC.ResultList.Result re_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_re_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResultList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.ResultList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .emo_gRPC.ResultList.Result re_result = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_re_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.ResultList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.ResultList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResultList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.ResultList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .emo_gRPC.ResultList.Result re_result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->re_result_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->re_result(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.ResultList)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.ResultList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .emo_gRPC.ResultList.Result re_result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->re_result_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->re_result(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.ResultList)
  return target;
}

size_t ResultList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.ResultList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .emo_gRPC.ResultList.Result re_result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->re_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->re_result(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.ResultList)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.ResultList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.ResultList)
    MergeFrom(*source);
  }
}

void ResultList::MergeFrom(const ResultList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.ResultList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  re_result_.MergeFrom(from.re_result_);
}

void ResultList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.ResultList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultList::CopyFrom(const ResultList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.ResultList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultList::IsInitialized() const {
  return true;
}

void ResultList::Swap(ResultList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultList::InternalSwap(ResultList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&re_result_)->InternalSwap(CastToBase(&other->re_result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LabelSize::InitAsDefaultInstance() {
}
class LabelSize::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabelSize::kWFieldNumber;
const int LabelSize::kHFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabelSize::LabelSize()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.LabelSize)
}
LabelSize::LabelSize(const LabelSize& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&h_) -
    reinterpret_cast<char*>(&w_)) + sizeof(h_));
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.LabelSize)
}

void LabelSize::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&w_)) + sizeof(h_));
}

LabelSize::~LabelSize() {
  // @@protoc_insertion_point(destructor:emo_gRPC.LabelSize)
  SharedDtor();
}

void LabelSize::SharedDtor() {
}

void LabelSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LabelSize& LabelSize::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LabelSize_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void LabelSize::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.LabelSize)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&w_)) + sizeof(h_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LabelSize::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 h = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LabelSize::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.LabelSize)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 w = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 h = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.LabelSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.LabelSize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LabelSize::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.LabelSize)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 w = 1;
  if (this->w() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->w(), output);
  }

  // int32 h = 2;
  if (this->h() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->h(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.LabelSize)
}

::PROTOBUF_NAMESPACE_ID::uint8* LabelSize::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.LabelSize)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 w = 1;
  if (this->w() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->w(), target);
  }

  // int32 h = 2;
  if (this->h() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->h(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.LabelSize)
  return target;
}

size_t LabelSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.LabelSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 w = 1;
  if (this->w() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->w());
  }

  // int32 h = 2;
  if (this->h() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->h());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabelSize::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.LabelSize)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelSize* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LabelSize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.LabelSize)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.LabelSize)
    MergeFrom(*source);
  }
}

void LabelSize::MergeFrom(const LabelSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.LabelSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
}

void LabelSize::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.LabelSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelSize::CopyFrom(const LabelSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.LabelSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelSize::IsInitialized() const {
  return true;
}

void LabelSize::Swap(LabelSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabelSize::InternalSwap(LabelSize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(w_, other->w_);
  swap(h_, other->h_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LabelSize::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmoImg::InitAsDefaultInstance() {
}
class EmoImg::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmoImg::kWFieldNumber;
const int EmoImg::kHFieldNumber;
const int EmoImg::kImgBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmoImg::EmoImg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:emo_gRPC.EmoImg)
}
EmoImg::EmoImg(const EmoImg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imgbuffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.imgbuffer().size() > 0) {
    imgbuffer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.imgbuffer_);
  }
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&h_) -
    reinterpret_cast<char*>(&w_)) + sizeof(h_));
  // @@protoc_insertion_point(copy_constructor:emo_gRPC.EmoImg)
}

void EmoImg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmoImg_emo_5fgRPC_2eproto.base);
  imgbuffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&w_)) + sizeof(h_));
}

EmoImg::~EmoImg() {
  // @@protoc_insertion_point(destructor:emo_gRPC.EmoImg)
  SharedDtor();
}

void EmoImg::SharedDtor() {
  imgbuffer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmoImg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmoImg& EmoImg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmoImg_emo_5fgRPC_2eproto.base);
  return *internal_default_instance();
}


void EmoImg::Clear() {
// @@protoc_insertion_point(message_clear_start:emo_gRPC.EmoImg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgbuffer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&h_) -
      reinterpret_cast<char*>(&w_)) + sizeof(h_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EmoImg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 h = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes imgBuffer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_imgbuffer(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EmoImg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:emo_gRPC.EmoImg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 w = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 h = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imgBuffer = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imgbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:emo_gRPC.EmoImg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:emo_gRPC.EmoImg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EmoImg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:emo_gRPC.EmoImg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 w = 1;
  if (this->w() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->w(), output);
  }

  // int32 h = 2;
  if (this->h() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->h(), output);
  }

  // bytes imgBuffer = 3;
  if (this->imgbuffer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->imgbuffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:emo_gRPC.EmoImg)
}

::PROTOBUF_NAMESPACE_ID::uint8* EmoImg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:emo_gRPC.EmoImg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 w = 1;
  if (this->w() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->w(), target);
  }

  // int32 h = 2;
  if (this->h() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->h(), target);
  }

  // bytes imgBuffer = 3;
  if (this->imgbuffer().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        3, this->imgbuffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:emo_gRPC.EmoImg)
  return target;
}

size_t EmoImg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:emo_gRPC.EmoImg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgBuffer = 3;
  if (this->imgbuffer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->imgbuffer());
  }

  // int32 w = 1;
  if (this->w() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->w());
  }

  // int32 h = 2;
  if (this->h() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->h());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmoImg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:emo_gRPC.EmoImg)
  GOOGLE_DCHECK_NE(&from, this);
  const EmoImg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmoImg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:emo_gRPC.EmoImg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:emo_gRPC.EmoImg)
    MergeFrom(*source);
  }
}

void EmoImg::MergeFrom(const EmoImg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:emo_gRPC.EmoImg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgbuffer().size() > 0) {

    imgbuffer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.imgbuffer_);
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
}

void EmoImg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:emo_gRPC.EmoImg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmoImg::CopyFrom(const EmoImg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:emo_gRPC.EmoImg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmoImg::IsInitialized() const {
  return true;
}

void EmoImg::Swap(EmoImg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmoImg::InternalSwap(EmoImg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  imgbuffer_.Swap(&other->imgbuffer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(w_, other->w_);
  swap(h_, other->h_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmoImg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace emo_gRPC
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::emo_gRPC::NullMsg* Arena::CreateMaybeMessage< ::emo_gRPC::NullMsg >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::NullMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::emo_gRPC::EmoConfig* Arena::CreateMaybeMessage< ::emo_gRPC::EmoConfig >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::EmoConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::emo_gRPC::ResultList_Result* Arena::CreateMaybeMessage< ::emo_gRPC::ResultList_Result >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::ResultList_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::emo_gRPC::ResultList* Arena::CreateMaybeMessage< ::emo_gRPC::ResultList >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::ResultList >(arena);
}
template<> PROTOBUF_NOINLINE ::emo_gRPC::LabelSize* Arena::CreateMaybeMessage< ::emo_gRPC::LabelSize >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::LabelSize >(arena);
}
template<> PROTOBUF_NOINLINE ::emo_gRPC::EmoImg* Arena::CreateMaybeMessage< ::emo_gRPC::EmoImg >(Arena* arena) {
  return Arena::CreateInternal< ::emo_gRPC::EmoImg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
