// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: yolo_gRPC.proto
#ifndef GRPC_yolo_5fgRPC_2eproto__INCLUDED
#define GRPC_yolo_5fgRPC_2eproto__INCLUDED

#include "yolo_gRPC.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc_impl {
class CompletionQueue;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc_impl

namespace grpc {
namespace experimental {
template <typename RequestT, typename ResponseT>
class MessageAllocator;
}  // namespace experimental
}  // namespace grpc

namespace yolo_gRPC {

class Communicate final {
 public:
  static constexpr char const* service_full_name() {
    return "yolo_gRPC.Communicate";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::NullMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> Asynccheck(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(AsynccheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> PrepareAsynccheck(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(PrepareAsynccheckRaw(context, request, cq));
    }
    virtual ::grpc::Status setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::yolo_gRPC::NullMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> AsyncsetYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(AsyncsetYoloConfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> PrepareAsyncsetYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(PrepareAsyncsetYoloConfRaw(context, request, cq));
    }
    virtual ::grpc::Status stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::NullMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> AsyncstopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(AsyncstopYoloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>> PrepareAsyncstopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>>(PrepareAsyncstopYoloRaw(context, request, cq));
    }
    virtual ::grpc::Status getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::ResultList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>> AsyncgetYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>>(AsyncgetYoloResultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>> PrepareAsyncgetYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>>(PrepareAsyncgetYoloResultRaw(context, request, cq));
    }
    virtual ::grpc::Status getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::yolo_gRPC::YoloImg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>> AsyncgetYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>>(AsyncgetYoloImgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>> PrepareAsyncgetYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>>(PrepareAsyncgetYoloImgRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      virtual void check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void check(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void check(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setYoloConf(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void setYoloConf(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopYolo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void stopYolo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getYoloResult(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::ResultList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void getYoloResult(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::ResultList* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getYoloImg(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::YoloImg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      virtual void getYoloImg(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::YoloImg* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
    };
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* AsynccheckRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* PrepareAsynccheckRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* AsyncsetYoloConfRaw(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* PrepareAsyncsetYoloConfRaw(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* AsyncstopYoloRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::NullMsg>* PrepareAsyncstopYoloRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>* AsyncgetYoloResultRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::ResultList>* PrepareAsyncgetYoloResultRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>* AsyncgetYoloImgRaw(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::yolo_gRPC::YoloImg>* PrepareAsyncgetYoloImgRaw(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::NullMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> Asynccheck(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(AsynccheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> PrepareAsynccheck(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(PrepareAsynccheckRaw(context, request, cq));
    }
    ::grpc::Status setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::yolo_gRPC::NullMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> AsyncsetYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(AsyncsetYoloConfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> PrepareAsyncsetYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(PrepareAsyncsetYoloConfRaw(context, request, cq));
    }
    ::grpc::Status stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::NullMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> AsyncstopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(AsyncstopYoloRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>> PrepareAsyncstopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>>(PrepareAsyncstopYoloRaw(context, request, cq));
    }
    ::grpc::Status getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::yolo_gRPC::ResultList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>> AsyncgetYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>>(AsyncgetYoloResultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>> PrepareAsyncgetYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>>(PrepareAsyncgetYoloResultRaw(context, request, cq));
    }
    ::grpc::Status getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::yolo_gRPC::YoloImg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>> AsyncgetYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>>(AsyncgetYoloImgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>> PrepareAsyncgetYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>>(PrepareAsyncgetYoloImgRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void check(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void check(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void check(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void setYoloConf(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void setYoloConf(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void setYoloConf(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void stopYolo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, std::function<void(::grpc::Status)>) override;
      void stopYolo(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void stopYolo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response, std::function<void(::grpc::Status)>) override;
      void getYoloResult(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::ResultList* response, std::function<void(::grpc::Status)>) override;
      void getYoloResult(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getYoloResult(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::ResultList* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response, std::function<void(::grpc::Status)>) override;
      void getYoloImg(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::YoloImg* response, std::function<void(::grpc::Status)>) override;
      void getYoloImg(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      void getYoloImg(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::yolo_gRPC::YoloImg* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* AsynccheckRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* PrepareAsynccheckRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* AsyncsetYoloConfRaw(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* PrepareAsyncsetYoloConfRaw(::grpc::ClientContext* context, const ::yolo_gRPC::YoloConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* AsyncstopYoloRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::NullMsg>* PrepareAsyncstopYoloRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>* AsyncgetYoloResultRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::ResultList>* PrepareAsyncgetYoloResultRaw(::grpc::ClientContext* context, const ::yolo_gRPC::NullMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>* AsyncgetYoloImgRaw(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::yolo_gRPC::YoloImg>* PrepareAsyncgetYoloImgRaw(::grpc::ClientContext* context, const ::yolo_gRPC::LabelSize& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_check_;
    const ::grpc::internal::RpcMethod rpcmethod_setYoloConf_;
    const ::grpc::internal::RpcMethod rpcmethod_stopYolo_;
    const ::grpc::internal::RpcMethod rpcmethod_getYoloResult_;
    const ::grpc::internal::RpcMethod rpcmethod_getYoloImg_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response);
    virtual ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response);
    virtual ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response);
    virtual ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response);
    virtual ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_check() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcheck(::grpc::ServerContext* context, ::yolo_gRPC::NullMsg* request, ::grpc::ServerAsyncResponseWriter< ::yolo_gRPC::NullMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_setYoloConf() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetYoloConf(::grpc::ServerContext* context, ::yolo_gRPC::YoloConfig* request, ::grpc::ServerAsyncResponseWriter< ::yolo_gRPC::NullMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_stopYolo() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopYolo(::grpc::ServerContext* context, ::yolo_gRPC::NullMsg* request, ::grpc::ServerAsyncResponseWriter< ::yolo_gRPC::NullMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_getYoloResult() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetYoloResult(::grpc::ServerContext* context, ::yolo_gRPC::NullMsg* request, ::grpc::ServerAsyncResponseWriter< ::yolo_gRPC::ResultList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_getYoloImg() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetYoloImg(::grpc::ServerContext* context, ::yolo_gRPC::LabelSize* request, ::grpc::ServerAsyncResponseWriter< ::yolo_gRPC::YoloImg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_check<WithAsyncMethod_setYoloConf<WithAsyncMethod_stopYolo<WithAsyncMethod_getYoloResult<WithAsyncMethod_getYoloImg<Service > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_check() {
      ::grpc::Service::experimental().MarkMethodCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>(
          [this](::grpc::ServerContext* context,
                 const ::yolo_gRPC::NullMsg* request,
                 ::yolo_gRPC::NullMsg* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->check(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_check(
        ::grpc::experimental::MessageAllocator< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>*>(
          ::grpc::Service::experimental().GetHandler(0))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_setYoloConf() {
      ::grpc::Service::experimental().MarkMethodCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::YoloConfig, ::yolo_gRPC::NullMsg>(
          [this](::grpc::ServerContext* context,
                 const ::yolo_gRPC::YoloConfig* request,
                 ::yolo_gRPC::NullMsg* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->setYoloConf(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_setYoloConf(
        ::grpc::experimental::MessageAllocator< ::yolo_gRPC::YoloConfig, ::yolo_gRPC::NullMsg>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::YoloConfig, ::yolo_gRPC::NullMsg>*>(
          ::grpc::Service::experimental().GetHandler(1))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_stopYolo() {
      ::grpc::Service::experimental().MarkMethodCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>(
          [this](::grpc::ServerContext* context,
                 const ::yolo_gRPC::NullMsg* request,
                 ::yolo_gRPC::NullMsg* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->stopYolo(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_stopYolo(
        ::grpc::experimental::MessageAllocator< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>*>(
          ::grpc::Service::experimental().GetHandler(2))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_getYoloResult() {
      ::grpc::Service::experimental().MarkMethodCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::ResultList>(
          [this](::grpc::ServerContext* context,
                 const ::yolo_gRPC::NullMsg* request,
                 ::yolo_gRPC::ResultList* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->getYoloResult(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_getYoloResult(
        ::grpc::experimental::MessageAllocator< ::yolo_gRPC::NullMsg, ::yolo_gRPC::ResultList>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::ResultList>*>(
          ::grpc::Service::experimental().GetHandler(3))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithCallbackMethod_getYoloImg() {
      ::grpc::Service::experimental().MarkMethodCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::LabelSize, ::yolo_gRPC::YoloImg>(
          [this](::grpc::ServerContext* context,
                 const ::yolo_gRPC::LabelSize* request,
                 ::yolo_gRPC::YoloImg* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   return this->getYoloImg(context, request, response, controller);
                 }));
    }
    void SetMessageAllocatorFor_getYoloImg(
        ::grpc::experimental::MessageAllocator< ::yolo_gRPC::LabelSize, ::yolo_gRPC::YoloImg>* allocator) {
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::yolo_gRPC::LabelSize, ::yolo_gRPC::YoloImg>*>(
          ::grpc::Service::experimental().GetHandler(4))
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  typedef ExperimentalWithCallbackMethod_check<ExperimentalWithCallbackMethod_setYoloConf<ExperimentalWithCallbackMethod_stopYolo<ExperimentalWithCallbackMethod_getYoloResult<ExperimentalWithCallbackMethod_getYoloImg<Service > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_check() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_setYoloConf() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_stopYolo() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_getYoloResult() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_getYoloImg() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_check() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcheck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_setYoloConf() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetYoloConf(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_stopYolo() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopYolo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_getYoloResult() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetYoloResult(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_getYoloImg() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetYoloImg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_check() {
      ::grpc::Service::experimental().MarkMethodRawCallback(0,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->check(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void check(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_setYoloConf() {
      ::grpc::Service::experimental().MarkMethodRawCallback(1,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->setYoloConf(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void setYoloConf(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_stopYolo() {
      ::grpc::Service::experimental().MarkMethodRawCallback(2,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->stopYolo(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void stopYolo(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_getYoloResult() {
      ::grpc::Service::experimental().MarkMethodRawCallback(3,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->getYoloResult(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getYoloResult(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    ExperimentalWithRawCallbackMethod_getYoloImg() {
      ::grpc::Service::experimental().MarkMethodRawCallback(4,
        new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
          [this](::grpc::ServerContext* context,
                 const ::grpc::ByteBuffer* request,
                 ::grpc::ByteBuffer* response,
                 ::grpc::experimental::ServerCallbackRpcController* controller) {
                   this->getYoloImg(context, request, response, controller);
                 }));
    }
    ~ExperimentalWithRawCallbackMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual void getYoloImg(::grpc::ServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response, ::grpc::experimental::ServerCallbackRpcController* controller) { controller->Finish(::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "")); }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_check : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_check() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>(std::bind(&WithStreamedUnaryMethod_check<BaseClass>::Streamedcheck, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_check() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status check(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcheck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::yolo_gRPC::NullMsg,::yolo_gRPC::NullMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setYoloConf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_setYoloConf() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::yolo_gRPC::YoloConfig, ::yolo_gRPC::NullMsg>(std::bind(&WithStreamedUnaryMethod_setYoloConf<BaseClass>::StreamedsetYoloConf, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_setYoloConf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setYoloConf(::grpc::ServerContext* context, const ::yolo_gRPC::YoloConfig* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetYoloConf(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::yolo_gRPC::YoloConfig,::yolo_gRPC::NullMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_stopYolo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_stopYolo() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::NullMsg>(std::bind(&WithStreamedUnaryMethod_stopYolo<BaseClass>::StreamedstopYolo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_stopYolo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status stopYolo(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::NullMsg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedstopYolo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::yolo_gRPC::NullMsg,::yolo_gRPC::NullMsg>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getYoloResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_getYoloResult() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::yolo_gRPC::NullMsg, ::yolo_gRPC::ResultList>(std::bind(&WithStreamedUnaryMethod_getYoloResult<BaseClass>::StreamedgetYoloResult, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_getYoloResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getYoloResult(::grpc::ServerContext* context, const ::yolo_gRPC::NullMsg* request, ::yolo_gRPC::ResultList* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetYoloResult(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::yolo_gRPC::NullMsg,::yolo_gRPC::ResultList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getYoloImg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_getYoloImg() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::yolo_gRPC::LabelSize, ::yolo_gRPC::YoloImg>(std::bind(&WithStreamedUnaryMethod_getYoloImg<BaseClass>::StreamedgetYoloImg, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_getYoloImg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getYoloImg(::grpc::ServerContext* context, const ::yolo_gRPC::LabelSize* request, ::yolo_gRPC::YoloImg* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetYoloImg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::yolo_gRPC::LabelSize,::yolo_gRPC::YoloImg>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_check<WithStreamedUnaryMethod_setYoloConf<WithStreamedUnaryMethod_stopYolo<WithStreamedUnaryMethod_getYoloResult<WithStreamedUnaryMethod_getYoloImg<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_check<WithStreamedUnaryMethod_setYoloConf<WithStreamedUnaryMethod_stopYolo<WithStreamedUnaryMethod_getYoloResult<WithStreamedUnaryMethod_getYoloImg<Service > > > > > StreamedService;
};

}  // namespace yolo_gRPC


#endif  // GRPC_yolo_5fgRPC_2eproto__INCLUDED
